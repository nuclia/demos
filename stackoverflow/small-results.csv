"How to disable text selection highlighting","<p>For anchors that act like buttons (for example, the buttons on the sidebar of this Stack Overflow page titled <em>Questions</em>, <em>Tags</em>, and <em>Users</em>) or tabs, is there a CSS standard way to disable the highlighting effect if the user accidentally selects the text?</p> <p>I realize that this could be done with JavaScript and a little googling yielded the Mozilla-only <code>-moz-user-select</code> option.</p> <p>Is there a standard-compliant way to accomplish this with CSS, and if not, what is the &quot;best practice&quot; approach?</p> " <p>According to <a href=""http://caniuse.com/#feat=user-select-none"" rel=""noreferrer"">Can I use</a>, the <code>user-select</code> + <strong><code>-webkit-user-select</code> for Safari</strong> is enough to achieve desired behavior in all major browsers.</p> <hr /> <p>These are all of the available correct CSS variations:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>.noselect {   -webkit-touch-callout: none; /* iOS Safari */     -webkit-user-select: none; /* Safari */      -khtml-user-select: none; /* Konqueror HTML */        -moz-user-select: none; /* Old versions of Firefox */         -ms-user-select: none; /* Internet Explorer/Edge */             user-select: none; /* Non-prefixed version, currently                                   supported by Chrome, Edge, Opera and Firefox */ }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;   Selectable text. &lt;/p&gt; &lt;p class=""noselect""&gt;   Unselectable text. &lt;/p&gt;</code></pre> </div> </div> </p> <hr /> <p>Note that <code>user-select</code> is in standardization process (currently in a <a href=""https://drafts.csswg.org/css-ui-4/#propdef-user-select"" rel=""noreferrer"">W3C working draft</a>). It is not guaranteed to work everywhere and there might be differences in implementation among browsers. Also, browsers can drop support for it in the future.</p> <hr /> <p>More information can be found in <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/user-select"" rel=""noreferrer"">Mozilla Developer Network documentation</a>.</p> <p>The values of this attribute are <code>none</code>, <code>text</code>, <code>toggle</code>, <code>element</code>, <code>elements</code>, <code>all</code> and <code>inherit</code>.</p>,"<p><strong>UPDATE January, 2017:</strong></p> "
"How can I horizontally center an element?","<p>How can I horizontally center a <code>&lt;div&gt;</code> within another <code>&lt;div&gt;</code> using CSS?</p> <pre class=""lang-html prettyprint-override""><code>&lt;div id=&quot;outer&quot;&gt;   &lt;div id=&quot;inner&quot;&gt;Foo foo&lt;/div&gt; &lt;/div&gt; </code></pre>  " <pre class=""lang-css prettyprint-override""><code>#inner {   width: 50%;   margin: 0 auto; } </code></pre> <p>Of course, you don't have to set the <code>width</code> to <code>50%</code>. Any width less than the containing <code>&lt;div&gt;</code> will work. The <code>margin: 0 auto</code> is what does the actual centering.</p> <p>If you are targeting <a href=""https://en.wikipedia.org/wiki/Internet_Explorer_8"" rel=""noreferrer"">Internet Explorer 8</a> (and later), it might be better to have this instead:</p> <pre class=""lang-css prettyprint-override""><code>#inner {   display: table;   margin: 0 auto; } </code></pre> <p>It will make the inner element center horizontally and it works without setting a specific <code>width</code>.</p> <p>Working example here:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>#inner {   display: table;   margin: 0 auto;   border: 1px solid black; }  #outer {   border: 1px solid red;   width:100% }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""outer""&gt;   &lt;div id=""inner""&gt;Foo foo&lt;/div&gt; &lt;/div&gt;</code></pre> </div> </div> </p> <hr /> <h2>EDIT</h2> <p>With <code>flexbox</code> it is very easy to style the div horizontally and vertically centered.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>#inner {     border: 0.05em solid black; }  #outer {   border: 0.05em solid red;   width:100%;   display: flex;   justify-content: center; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""outer""&gt;   &lt;div id=""inner""&gt;Foo foo&lt;/div&gt; &lt;/div&gt;</code></pre> </div> </div> </p> <p>To align the div vertically centered, use the property <code>align-items: center</code>.</p>,"<p>You can apply this CSS to the inner <code>&lt;div&gt;</code>:</p> "
"Change a HTML5 input's placeholder color with CSS","<p>Chrome supports the <a href=""http://www.w3.org/html/wg/drafts/html/master/single-page.html#the-placeholder-attribute"" rel=""noreferrer"" title=""The placeholder attribute"">placeholder attribute</a> on <code>input[type=text]</code> elements (others probably do too).</p> <p>But the following CSS doesn't do anything to the placeholder's value:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>input[placeholder], [placeholder], *[placeholder] {     color: red !important; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;input type=""text"" placeholder=""Value""&gt;</code></pre> </div> </div> </p> <p>But <code>Value</code> will still remain <code>grey</code> instead of <code>red</code>.</p> <p><strong>Is there a way to change the color of the placeholder text?</strong></p> " <p>There are three different implementations: pseudo-elements, pseudo-classes, and nothing.</p> <ul> <li>WebKit, Blink (Safari, Google Chrome, Opera 15+) and Microsoft Edge are using a pseudo-element: <code>::-webkit-input-placeholder</code>. <sup>[<a href=""https://bugs.webkit.org/show_bug.cgi?id=21227"" rel=""noreferrer"">Ref</a>]</sup></li> <li>Mozilla Firefox 4 to 18 is using a pseudo-class: <code>:-moz-placeholder</code> (<em>one</em> colon). <sup>[<a href=""https://developer.mozilla.org/en/CSS/:-moz-placeholder"" rel=""noreferrer"">Ref</a>]</sup></li> <li>Mozilla Firefox 19+ is using a pseudo-element: <code>::-moz-placeholder</code>, but the old selector will still work for a while. <sup>[<a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/%3A%3A-moz-placeholder"" rel=""noreferrer"">Ref</a>]</sup></li> <li>Internet Explorer 10 and 11 are using a pseudo-class: <code>:-ms-input-placeholder</code>. <sup>[<a href=""http://msdn.microsoft.com/en-us/library/ie/hh772745(v=vs.85).aspx"" rel=""noreferrer"">Ref</a>]</sup></li> <li>April 2017: <strong>Most modern browsers support the simple pseudo-element <code>::placeholder</code> <sup>[<a href=""https://caniuse.com/#feat=css-placeholder"" rel=""noreferrer"">Ref</a>]</sup></strong></li> </ul> <p>Internet Explorer 9 and lower does not support the <code>placeholder</code> attribute at all, while <a href=""http://web.archive.org/web/20131206060908/http://my.opera.com/community/forums/topic.dml?id=841252&amp;t=1296553904&amp;page=1#comment8072202"" rel=""noreferrer"">Opera 12 and lower do not support</a> any CSS selector for placeholders.</p> <p>The discussion about the best implementation is still going on. Note the pseudo-elements act like real elements in the <a href=""http://glazkov.com/2011/01/14/what-the-heck-is-shadow-dom/"" rel=""noreferrer"">Shadow DOM</a>. A <code>padding</code> on an <code>input</code> will not get the same background color as the pseudo-element.</p> <h2>CSS selectors</h2> <p>User agents are required to ignore a rule with an unknown selector. See <a href=""http://www.w3.org/TR/selectors/#Conformance"" rel=""noreferrer"">Selectors Level 3</a>:</p> <blockquote> <p>a <a href=""http://www.w3.org/TR/selectors/#grouping"" rel=""noreferrer"">group</a> of selectors containing an invalid selector is invalid.</p> </blockquote> <p>So we need separate rules for each browser. Otherwise the whole group would be ignored by all browsers. <div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>::-webkit-input-placeholder { /* WebKit, Blink, Edge */     color:    #909; } :-moz-placeholder { /* Mozilla Firefox 4 to 18 */    color:    #909;    opacity:  1; } ::-moz-placeholder { /* Mozilla Firefox 19+ */    color:    #909;    opacity:  1; } :-ms-input-placeholder { /* Internet Explorer 10-11 */    color:    #909; } ::-ms-input-placeholder { /* Microsoft Edge */    color:    #909; }  ::placeholder { /* Most modern browsers support this now. */    color:    #909; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;input placeholder=""Stack Snippets are awesome!""&gt;</code></pre> </div> </div> </p> <h2>Usage notes</h2> <ul> <li>Be careful to avoid bad contrasts. Firefox's placeholder appears to be defaulting with a reduced opacity, so needs to use <code>opacity: 1</code> here.</li> <li>Note that placeholder text is just cut off if it doesn’t fit – size your input elements in <code>em</code> and test them with big minimum font size settings. Don’t forget translations: some languages <a href=""http://www.w3.org/International/articles/article-text-size.en"" rel=""noreferrer"">need more room</a> for the same word.</li> <li>Browsers with HTML support for <code>placeholder</code> but without CSS support for that (like Opera) should be tested too.</li> <li>Placeholders are no replacement for labels, so make sure you have a label, too</li> <li>Some browsers use additional default CSS for some <code>input</code> types (<code>email</code>, <code>search</code>). These might affect the rendering in unexpected ways. Use the <a href=""https://developer.mozilla.org/en-US/docs/CSS/-moz-appearance"" rel=""noreferrer"">properties</a> <code>-webkit-appearance</code> and <code>-moz-appearance</code> to change that. Example:</li> </ul> <pre class=""lang-css prettyprint-override""><code>    [type=&quot;search&quot;] {         -moz-appearance:    textfield;         -webkit-appearance: textfield;         appearance: textfield;     } </code></pre>,"<h2>Implementation</h2> "
"How do I disable the resizable property of a textarea?","<p>I want to disable the resizable property of a <code>textarea</code>.</p>  <p>Currently, I can resize a <code>textarea</code> by clicking on the bottom right corner of the <code>textarea</code> and dragging the mouse. How can I disable this?</p>  <p><a href=""https://i.stack.imgur.com/xrfWQ.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/xrfWQ.png"" alt=""Enter image description here""></a></p> " <pre class=""lang-css prettyprint-override""><code>textarea {   resize: none; } </code></pre> <p>To disable it for some (but not all) <code>textarea</code>s, there are a <a href=""http://www.electrictoolbox.com/disable-textarea-resizing-safari-chrome/"" rel=""noreferrer"">couple of options</a>.</p> <p>You can use <code>class</code> attribute in your tag(<code>&lt;textarea class=&quot;textarea1&quot;&gt;</code>):</p> <pre class=""lang-css prettyprint-override""><code>.textarea1 {   resize: none; } </code></pre> <p>To disable a specific <code>textarea</code> with the <code>name</code> attribute set to <code>foo</code> (i.e., <code>&lt;textarea name=&quot;foo&quot;&gt;&lt;/textarea&gt;</code>):</p> <pre class=""lang-css prettyprint-override""><code>textarea[name=foo] {   resize: none; } </code></pre> <p>Or, using an <code>id</code> attribute (i.e., <code>&lt;textarea id=&quot;foo&quot;&gt;&lt;/textarea&gt;</code>):</p> <pre class=""lang-css prettyprint-override""><code>#foo {   resize: none; } </code></pre> <p>The <a href=""http://www.w3.org/TR/css3-ui/#resize"" rel=""noreferrer"">W3C page</a> lists possible values for resizing restrictions: none, both, horizontal, vertical, and inherit:</p> <pre class=""lang-css prettyprint-override""><code>textarea {   resize: vertical; /* user can resize vertically, but width is fixed */ } </code></pre> <p>Review a decent <a href=""http://quirksmode.org/css/user-interface/"" rel=""noreferrer"">compatibility page</a> to see what browsers currently support this feature. As Jon Hulka has commented, the dimensions can be <a href=""http://davidwalsh.name/textarea-resize"" rel=""noreferrer"">further restrained</a> in CSS using max-width, max-height, min-width, and min-height.</p> <blockquote> <h3>Super important to know:</h3> <p>This property does nothing unless the overflow property is something other than visible, which is the default for most elements. So generally to use this, you'll have to set something like overflow: scroll;</p> <p>Quote by Sara Cope, <a href=""http://css-tricks.com/almanac/properties/r/resize/"" rel=""noreferrer"">http://css-tricks.com/almanac/properties/r/resize/</a></p> </blockquote>,"<p>The following CSS rule disables resizing behavior for <a href=""http://www.w3.org/wiki/HTML/Elements/textarea"" rel=""noreferrer""><code>textarea</code></a> elements:</p> "
"I need an unordered list without any bullets","<p>I have created an unordered list. I feel the bullets in the unordered list are bothersome, so I want to remove them. </p>  <p>Is it possible to have a list without bullets?</p> "  <pre class=""lang-css prettyprint-override""><code>ul {   list-style-type: none; } </code></pre>  <p>You might also want to add <code>padding: 0</code> and <code>margin: 0</code> to that if you want to remove indentation as well.</p>  <p>See <a href=""http://css.maxdesign.com.au/listutorial/index.htm"" rel=""noreferrer"">Listutorial</a> for a great walkthrough of list formatting techniques.</p>,"<p>You can remove bullets by setting the <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type"" rel=""noreferrer""><code>list-style-type</code></a> to <code>none</code> on the CSS for the parent element (typically a <code>&lt;ul&gt;</code>), for example:</p> "
"Set cellpadding and cellspacing in CSS?","<p>In an HTML table, the <code>cellpadding</code> and <code>cellspacing</code> can be set like this:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;table cellspacing=""1"" cellpadding=""1""&gt; </code></pre>  <p>How can the same be accomplished using CSS?</p> " <p>For controlling &quot;cellpadding&quot; in CSS, you can simply use <code>padding</code> on table cells. E.g. for 10px of &quot;cellpadding&quot;:</p> <pre class=""lang-css prettyprint-override""><code>td {      padding: 10px; } </code></pre> <p>For &quot;cellspacing&quot;, you can apply the <code>border-spacing</code> CSS property to your table. E.g. for 10px of &quot;cellspacing&quot;:</p> <pre class=""lang-css prettyprint-override""><code>table {      border-spacing: 10px;     border-collapse: separate; } </code></pre> <p>This property will even allow separate horizontal and vertical spacing, something you couldn't do with old-school &quot;cellspacing&quot;.</p> <p><strong>Issues in IE ≤  7</strong></p> <p>This will work in almost all popular browsers except for Internet Explorer up through Internet Explorer 7, where you're almost out of luck. I say &quot;almost&quot; because these browsers still support the <code>border-collapse</code> property, which merges the borders of adjoining table cells. If you're trying to eliminate cellspacing (that is, <code>cellspacing=&quot;0&quot;</code>) then <code>border-collapse:collapse</code> should have the same effect: no space between table cells. This support is buggy, though, as it does not override an existing <code>cellspacing</code> HTML attribute on the table element.</p> <p>In short: for non-Internet Explorer 5-7 browsers, <code>border-spacing</code> handles you. For Internet Explorer, if your situation is just right (you want 0 cellspacing and your table doesn't have it defined already), you can use <code>border-collapse:collapse</code>.</p> <pre class=""lang-css prettyprint-override""><code>table {      border-spacing: 0;     border-collapse: collapse; } </code></pre> <p>Note: For a great overview of CSS properties that one can apply to tables and for which browsers, see this <a href=""http://www.quirksmode.org/css/tables.html"" rel=""noreferrer"">fantastic Quirksmode page</a>.</p>,"<p><strong>Basics</strong></p> "
"How to change the cursor into a hand when a user hovers over a list item?","<p>I've got a list, and I have a click handler for its items:</p>  <pre><code>&lt;ul&gt;   &lt;li&gt;foo&lt;/li&gt;   &lt;li&gt;goo&lt;/li&gt; &lt;/ul&gt; </code></pre>  <p>How can I change the mouse pointer into a hand pointer (like when hovering over a button)? Right now the pointer turns into a text selection pointer when I hover over the list items.</p> "  <pre class=""lang-css prettyprint-override""><code>li { cursor: pointer; } </code></pre>,"<p>In light of the passage of time, as people have mentioned, you can now safely just use:</p> "
"How do I make a placeholder for a 'select' box?","<p>I'm using placeholders for text inputs which is working out just fine. But I'd like to use a placeholder for my selectboxes as well. Of course I can just use this code:</p>  <pre><code>&lt;select&gt;     &lt;option value=""""&gt;Select your option&lt;/option&gt;     &lt;option value=""hurr""&gt;Durr&lt;/option&gt; &lt;/select&gt; </code></pre>  <p>But the 'Select your option' is in black instead of lightgrey. So my solution could possibly be CSS-based. jQuery is fine too.</p>  <p>This only makes the option grey in the dropdown (so after clicking the arrow):</p>  <pre class=""lang-css prettyprint-override""><code>option:first {     color: #999; } </code></pre>  <p>The question is: How do people create placeholders in selectboxes? But it has already been answered, cheers.</p>  <p>And using this results in the selected value always being grey (even after selecting a real option):</p>  <pre class=""lang-css prettyprint-override""><code>select {     color: #999; } </code></pre> " <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;label&gt;Option name &lt;select&gt;     &lt;option value="""" disabled selected&gt;Select your option&lt;/option&gt;     &lt;option value=""hurr""&gt;Durr&lt;/option&gt; &lt;/select&gt; &lt;/label&gt;</code></pre> </div> </div> </p> <p><strong>Update</strong> (December 2021):</p> <p>This works for latest Firefox, Chrome, and Safari. It used to not work for many browsers in the past, as pointed out in the comments.</p>,"<p>A non-CSS - no JavaScript/jQuery answer:</p> "
"How can I transition height: 0; to height: auto; using CSS?","<p>I am trying to make a <code>&lt;ul&gt;</code> slide down using CSS transitions.</p>  <p>The <code>&lt;ul&gt;</code> starts off at <code>height: 0;</code>. On hover, the height is set to <code>height:auto;</code>. However, this is causing it to simply appear, <em>not</em> transition,</p>  <p>If I do it from <code>height: 40px;</code> to <code>height: auto;</code>, then it will slide up to <code>height: 0;</code>, and then suddenly jump to the correct height.</p>  <p>How else could I do this without using JavaScript?</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>#child0 {   height: 0;   overflow: hidden;   background-color: #dedede;   -moz-transition: height 1s ease;   -webkit-transition: height 1s ease;   -o-transition: height 1s ease;   transition: height 1s ease; } #parent0:hover #child0 {   height: auto; } #child40 {   height: 40px;   overflow: hidden;   background-color: #dedede;   -moz-transition: height 1s ease;   -webkit-transition: height 1s ease;   -o-transition: height 1s ease;   transition: height 1s ease; } #parent40:hover #child40 {   height: auto; } h1 {   font-weight: bold; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>The only difference between the two snippets of CSS is one has height: 0, the other height: 40. &lt;hr&gt; &lt;div id=""parent0""&gt;   &lt;h1&gt;Hover me (height: 0)&lt;/h1&gt;   &lt;div id=""child0""&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;   &lt;/div&gt; &lt;/div&gt; &lt;hr&gt; &lt;div id=""parent40""&gt;   &lt;h1&gt;Hover me (height: 40)&lt;/h1&gt;   &lt;div id=""child40""&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;Some content     &lt;br&gt;   &lt;/div&gt; &lt;/div&gt;</code></pre> </div> </div> </p> "  <p>See <a href=""http://jsfiddle.net/thechrisjordan/3Fc7D/23/"" rel=""noreferrer"">JSFiddle demo</a> provided by Chris Jordan in another <a href=""https://stackoverflow.com/a/20226830/18706"">answer</a> here.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-css lang-css prettyprint-override""><code>#menu #list {     max-height: 0;     transition: max-height 0.15s ease-out;     overflow: hidden;     background: #d5d5d5; }  #menu:hover #list {     max-height: 500px;     transition: max-height 0.25s ease-in; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""menu""&gt;     &lt;a&gt;hover me&lt;/a&gt;     &lt;ul id=""list""&gt;         &lt;!-- Create a bunch, or not a bunch, of li's to see the timing. --&gt;         &lt;li&gt;item&lt;/li&gt;         &lt;li&gt;item&lt;/li&gt;         &lt;li&gt;item&lt;/li&gt;         &lt;li&gt;item&lt;/li&gt;         &lt;li&gt;item&lt;/li&gt;     &lt;/ul&gt; &lt;/div&gt;</code></pre> </div> </div> </p>,"<p>Use <code>max-height</code> in the transition and not <code>height</code>. And set a value on <code>max-height</code> to something bigger than your box will ever get.</p> "
"Sass Variable in CSS calc() function","<p>I'm trying to use the <code>calc()</code> function in a Sass stylesheet, but I'm having some issues. Here's my code:</p> <pre><code>$body_padding: 50px  body     padding-top: $body_padding     height: calc(100% - $body_padding) </code></pre> <p>If I use the literal <code>50px</code> instead of my <code>body_padding</code> variable, I get exactly what I want. However, when I switch to the variable, this is the output:</p> <pre><code>body {     padding-top: 50px;     height: calc(100% - $body_padding); } </code></pre> <p>How can I get Sass to recognize that it needs to replace the variable within the <code>calc</code> function?</p> "  <pre><code>body     height: calc(100% - #{$body_padding}) </code></pre>  <p>For this case, <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing#Values"" rel=""noreferrer"">border-box</a> would also suffice:</p>  <pre><code>body     box-sizing: border-box     height: 100%     padding-top: $body_padding </code></pre>,"<p><a href=""https://sass-lang.com/documentation/interpolation"" rel=""noreferrer"">Interpolate</a>:</p> "
